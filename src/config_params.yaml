# config_params.yaml file: When simcore_config is run, this file is read to generate 
# system_parameters structure as well as code for parsing parameters in parameter yaml file.

seed : [7859459105545,long]          # Seed for random number generator, sets initial conditions.
n_runs: [1, int]                     # Number of simulations to perform using identical parameters
                                     # with unique initial conditions (new seed).
n_random: [1, int]                   # Number of samples when using randomly-sampled parameters.
run_name: [sc,string]                # Prefix used to label output files.
n_dim : [3,int]                      # Dimensionality of system. 2 or 3.
n_periodic : [0,int]                 # Number of periodic dimensions. Should be <= n_dim.
boundary : [0,int]                   # 0: No boundary condition constraints.
                                     # 1: Box-like boundary condition.
                                     # 2: Spherical BC with radius of system_radius.
                                     # 3: Budding-yeast BC with mother and daughter cell.
system_radius : [100,double]         # Sets system volume. 1D system length is 2 x system_radius.
n_steps : [1000000,int]              # Number of steps to run simulation before completion.
i_step: [0, int]                     # Internal parameter used for tracking simulation iteration.
delta : [0.001,double]               # Simulation time duration between each simulation step.
cell_length: [10, double]            # Default width of cells used in cell list. Should be set 
                                     # internally based on other system parameters.
n_update_cells: [0, int]             # If > 0, updates cell list every n_update_cells steps.
                                     # Otherwise, updates when particles move a fraction of the
                                     # cell length.
graph_flag : [0, int]                # Whether to run simulation with live graphics.
n_graph : [1000,int]                 # Number of simulation steps between refreshing graphics.
graph_diameter : [0,double]          # If > 0, draws particles with a diameter of graph_diameter.
graph_background : [1,int]           # If zero, black background, if 1, white background.
draw_boundary: [1, int]              # If set to zero, does not draw system boundary conditions.
load_checkpoint: [0, int]            # Flag for reading checkpoint file corresponding to
                                     # input parameter file. Equiv to "./simcore -l params.yaml"
checkpoint_run_name: [sc, string]    # Internal parameter for tracking checkpoint file run name.
n_load: [0, int]                     # Internal parameter for keeping track of reload numbers
print_complete: [0, int]             # 0, redraw text to update sim complete percentage,
                                     # >0, print new line for each percentage update.
insertion_type: [species, string]    # Deprecated
movie_flag : [0, int]                # Generate bitmaps of graphics window to movie_directory
movie_directory : [frames,string]    # Directory to output graphics bitmaps
time_analysis : [0,int]              # Generate output file with simulation runtime data
bud_height : [680,double]            # center separation of mother and daughter cells
bud_radius : [300,double]            # radius of daughter cell
lj_epsilon: [1, double]              # Energy scaling factor for Lennard-Jones potential
wca_eps: [1,double]                  # Energy scaling factor for WCA potential
wca_sig: [1,double]                  # Distance scaling factor for WCA potential
ss_a: [1,double]                     # Soft shoulder potential parameter.
ss_rs: [1.5,double]                  # Soft shoulder potential distance scaling parameter.
ss_eps: [1,double]                   # Soft shoulder potential energy scaling parameter.
f_cutoff: [2000,double]              # Maximum force generated by interaction potentials
max_overlap: [100000,int]            # Deprecated.
constant_pressure: [0, int]          # Flag to maintain constant pressure: system volume may vary.
constant_volume: [0, int]            # Flag to adiabatically resize system volume to target volume.
target_pressure: [0, double]         # Target pressure for constant pressure.
target_radius: [100, double]         # Target volume for constant volume.
pressure_time: [100, int]            # No. steps to reach target pressure in constant pressure sim.
compressibility: [1, double]         # Scaling param for unit cell updates for constant pressure.
stoch_flag: [1, int]                 # Flag for toggling Brownian motion in various species.
thermo_flag: [0, int]                # Output stress tensor and pressure/volume information every
                                     # n_thermo steps
n_thermo: [1000, int]                # How often to output thermo info.
interaction_flag: [1, int]           # If zero, skips checking for particle interactions.
species_insertion_failure_threshold: [10000,int] # Threshold used during species insertion for
                                                 # triggering a re-insertion of all species
species_insertion_reattempt_threshold: [10, int] # Maximum number of attempts to reinsert all
                                                 # species. May need to set higher for high
                                                 # densities with randomized insertion.
uniform_crystal: [0, int]            # Insert species onto uniform crystal lattice.
n_steps_equil: [0, int]              # Used for species with active dynamics to equilibriate for
                                     # n_steps_equil steps before beginning activity.        
n_steps_target: [100000, int]        # Used for adiabatically varying parameters, parameters will
                                     # reach their target parameter in n_steps_target steps.
static_particle_number: [0, int]     # Tells interaction engine that particle number will never
                                     # change, circumventing certain book-keeping functions.
checkpoint_from_spec: [0, int]       # Generate a checkpoint file from an existing spec file.
potential: [wca, string]             # Specifies interaction potential between all particles.
soft_potential_mag: [10, double]     # Energy scaling parameter for GEM-8 potential.
soft_potential_mag_target: [-1, double] # If >= 0, rescales GEM-8 energy to meet target in 
                                        # n_steps_target steps.
like_like_interactions: [1,int]      # If zero, particles of the same species do not interact.
auto_graph: [0,int]                  # If > 0 and graph_flag > 0, graphics window does not wait
                                     # for user to hit ESC before running. Useful for movies.
local_order_width: [50, double]      
local_order_bin_width: [0.5, double]
local_order_average: [1, int]
local_order_analysis: [0, int]
local_order_n_analysis: [100, int]
density_analysis: [0, int]
density_bin_width: [0.1, double]
density_com_only: [0, int]
polar_order_analysis: [0, int]
polar_order_n_bins: [100, int]
polar_order_contact_cutoff: [3, double]
polar_order_color: [0, int]
overlap_analysis: [0, int]
highlight_overlaps: [0, int]
reduced: [0, int]
reload_reduce_switch: [0, int]
flock_polar_min: [0.5, double]
flock_contact_min: [1.5, double]
highlight_flock: [0, int]
flock_color_ext: [1.57, double]
flock_color_int: [4.71, double]
in_out_flag: [0, int]
species:
  num: [0, int]
  insertion_type: [random, string]
  insert_file: [none, string]
  overlap: [0, int]
  draw_type: [orientation, string]
  color: [0,double]
  posit_flag: [0, int]
  spec_flag: [0, int]
  checkpoint_flag: [0, int]
  n_posit: [100, int]
  n_spec: [100, int]
  n_checkpoint: [10000, int]
filament:
  diameter: [1, double]
  length: [-1, double]
  persistence_length: [400, double]
  max_length: [500,double]
  min_length: [1, double]
  max_bond_length: [5, double]
  min_bond_length: [1.5, double]
  spiral_flag: [0, int]
  spiral_number_fail_condition: [0, double]
  driving_factor: [0, double]
  friction_ratio: [2, double]
  dynamic_instability_flag : [0,int]
  force_induced_catastrophe_flag : [0,int]
  optical_trap_flag: [0, int]
  optical_trap_spring: [20, double]
  optical_trap_fixed: [0, int]
  cilia_trap_flag: [0, int]
  fic_factor: [0.828,double]
  f_shrink_to_grow : [0.017,double] # Frequencies for dynamic instability
  f_shrink_to_pause : [0.0,double]
  f_pause_to_grow : [0.0,double]
  f_pause_to_shrink : [0.0,double]
  f_grow_to_pause : [0.0,double]
  f_grow_to_shrink : [0.00554,double]
  metric_forces : [1,int]
  v_poly : [0.44,double]
  v_depoly : [0.793,double]
  theta_analysis: [0, int]
  lp_analysis: [0,int]
  global_order_analysis: [0, int]
  packing_fraction: [-1, double]
  shuffle: [1, int]
  shuffle_factor: [10, double]
  shuffle_frequency: [0.001, double]
  perlen_ratio: [-1, double]
  perlen_ratio_target: [-1, double]
  n_bonds: [-1, int]
  driving_method: [0, int]
  n_equil: [0, int]
  orientation_corr_analysis: [0, int]
  orientation_corr_n_steps: [1000,int]
  crossing_analysis: [0, int]
  intrinsic_curvature: [0, double]
  flagella_flag: [0, int]
  flagella_freq: [1, double]
  flagella_period: [2, double]
  flagella_amplitude: [1, double]
  flocking_analysis: [0, int]
passive_filament:
  diameter: [1, double]
  length: [-1, double]
  persistence_length: [400, double]
  max_length: [500,double]
  min_length: [1, double]
  max_bond_length: [5, double]
  min_bond_length: [1.5, double]
  driving_factor: [0, double]
  friction_ratio: [2, double]
  metric_forces : [1,int]
  theta_analysis: [0, int]
  lp_analysis: [0,int]
  packing_fraction: [-1, double]
  perlen_ratio: [-1, double]
  n_bonds: [-1, int]
hard_rod:
  diameter: [1, double]
  length: [40, double]
  min_length: [3, double]
  max_length: [300, double]
  max_bond_length: [5, double]
  driving_factor: [0, double]
br_bead:
  diameter: [1, double]
  driving_factor: [0, double]
  packing_fraction: [-1, double]
md_bead:
  diameter: [1, double]
  mass: [1, double]
  driving_factor: [0, double]
centrosome:
  diameter: [10,double]
  n_filaments_min: [0,int]
  n_filaments_max: [10,int]
  fixed_spacing: [0,int]
  alignment_potential: [0,int]
  k_spring: [1000,double]
  k_align: [0, double]
  spring_length: [0,double]
motor:
  diameter: [3, double]
  walker: [0, int]
  step_direction: [0, int]
  k_off: [2, double]
  k_on: [10, double]
  concentration: [0, double]
  velocity: [1, double]
  diffusion_flag: [1, int]
  k_spring: [1000, double]
  f_spring_max: [100, double]
bead_spring:
  diameter: [1, double]
  length: [40, double]
  persistence_length: [4000, double]
  max_bond_length: [1, double]
  bond_rest_length: [0.8, double]
  bond_spring: [100, double]
  driving_factor: [0, double]
  lp_analysis: [0, int]
  theta_analysis: [0, int]
  packing_fraction: [-1, double]
spherocylinder:
  diameter: [1, double]
  length: [5, double]
  diffusion_analysis: [0, int]
  n_diffusion_samples: [1, int]
  midstep: [0, int]
spindle:
  diameter: [10,double]
  length: [20, double]
  n_filaments_bud: [1,int]
  n_filaments_mother: [0,int]
  alignment_potential: [0,int]
  k_spring: [1000,double]
  k_align: [0, double]
  spring_length: [0,double]
  spb_diameter: [5, double]
crosslink:
  concentration: [0, double]
  diameter: [1, double]
  walker: [0, int]
  velocity: [1, double]
  diffusion_flag: [0, int]
  k_on: [10, double]
  k_off: [2, double]
  k_on_sd: [10, double]
  force_dep_factor: [1, double]
  polar_affinity: [0, double]
  k_spring: [10, double]
  f_spring_max: [1000, double]
  f_stall: [100, double]
  force_dep_vel_flag: [1, int]
  k_align: [0, double]
  rest_length: [0, double]
  step_direction: [0, int]
  tether_draw_type: [orientation, string]
  tether_diameter: [0.5, double]
  tether_color: [3.1416, double]
  end_pausing: [0, int]
  r_capture: [5, double]
